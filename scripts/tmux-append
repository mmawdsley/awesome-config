#!/usr/bin/env python

import argparse
import os
import pipes

class Tmux_Append:
  def __init__ (self):
    """Sets up the attributes."""
    self.session = "main"       # Session name
    self.command = None         # Command to run
    self.default_path = None    # Default path
    self.new_path = None        # New path
    self.window_name = None     # Window name
    self.attach_session = None  # Whether to attach to the session or create it

  def main (self):
    """Constructor."""
    self.default_path = os.getenv ("HOME")
    self.setup ()
    self.run ()

  def setup (self):
    """Gets the command-line options."""

    parser = argparse.ArgumentParser ()
    parser.add_argument ("-s", "--session", type=str)
    parser.add_argument ("-c", "--command", type=str)
    parser.add_argument ("-p", "--path", type=str)
    parser.add_argument ("-n", "--name", type=str)

    args = parser.parse_args ()

    self.session = args.session or self.session
    self.command = args.command or self.command
    self.new_path = args.path or self.new_path
    self.window_name = args.name or self.window_name

  def run (self):
    """Runs the command."""
    args = []                   # List of tmux arguments
    tmux_command = None         # Tmux command
    window_command = None       # new-window command
    command = None              # Final command

    self.check_session ()

    if self.attach_session:
      args.append ("attach-session -t %s" % pipes.quote (self.session))
    else:
      args.append ("new-session -s %s" % pipes.quote (self.session))

    args.append ("set-option aggressive-resize off")

    if (self.new_path):
      args.append ("set-option default-path %s" % pipes.quote (self.new_path))

    window_command = "new-window"

    if (self.window_name):
      window_command += " -n %s" % self.window_name

    if (self.command):
      window_command += " " + pipes.quote (self.command)

    args.append (window_command)

    if (self.new_path):
      args.append ("set-option default-path %s" % pipes.quote (self.default_path))

    args.append ("detach-client")

    tmux_command = "tmux %s" % " \; ".join (args)
    command = "urxvt -name urxvt-temp -e %s" % tmux_command

    os.system (command)

  def check_session (self):
    """Checks whether the selected session already exists."""
    command = None              # Command to run

    command = "tmux -q has-session -t %s" % pipes.quote (self.session)

    if os.system (command) == 0:
      self.attach_session = True
    else:
      self.attach_session = False

if __name__ == "__main__":
  Tmux_Append ().main ()
